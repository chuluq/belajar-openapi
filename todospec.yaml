openapi: 3.0.3
info:
  title: Todolist RESTful API
  version: 1.0.0
  description: OpenAPI for Todolist RESTful API
  termsOfService: https://glowing-glasses.vercel.app/
  contact:
    name: Moch Chaerul Chuluq
    email: choirulchuluq10@gmail.com
    url: https://glowing-glasses.vercel.app/
  license:
    name: APACHE 2.0
    url: https://www.apache.org/licenses/LICENSE-2.0.html
servers:
  - url: https://{environment}.glowing-glasses.vercel.app/api/v1
    description: Todolist RESTful API Server
    variables:
      environment:
        default: dev
        enum:
          - dev
          - qa
          - prod
externalDocs:
  description: Youtube
  url: https://www.youtube.com
paths:
  /todolist:
    get:
      tags:
        - Todolist
      summary: Get all todolist
      description: GEt all active todolist by default
      parameters:
        - name: include_done
          in: query
          required: false
          description: Is include done todolist
          schema:
            type: boolean
            nullable: true
            default: false
        - name: name
          in: query
          required: false
          description: Filter todolist by name
          schema:
            type: string
            nullable: true,
            minLength: 1,
            maxLength: 100
          examples:
            java:
              description: Example name Java
              value: Java
            php:
              description: Example name PHP
              value: PHP
      responses:
        200:
          description: Success get all todolist
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ArrayTodolist"
              examples:
                success:
                  description: Example success get all todolist
                  value:
                    - id: 1
                      name: Java
                      priority: 3
                      tags: [ Java, Programming ]
                    - id: 2
                      name: PHP
                      priority: 5
                      tags: [ PHP, Programming ]
    post:
      tags:
        - Todolist
      summary: Create new todolist
      description: Create new todolist to database
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/CreateOrUpdateTodolist"
            examples:
              java:
                description: Example create todolist Java
                value:
                  name: Java
                  priority: 3
                  tags: [
                    Java,
                    Programming
                  ]
              php:
                description: Example create todolist PHP
                value:
                  name: PHP
                  priority: 5
                  tags: [
                    PHP,
                    Programming
                  ]
      responses:
        200:
          description: Success create todolist
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Todolist"
              examples:
                java:
                  description: Success create todolist Java
                  value:
                    name: Java
                    priority: 3
                    tags: [
                      Java,
                      Programming
                    ]
                php:
                  description: Success create todolist PHP
                  value:
                    name: PHP
                    priority: 5
                    tags: [
                      PHP,
                      Programming
                    ]
  /todolist/{todolistId}:
    put:
      tags:
        - Todolist
      summary: Update existing todolist
      description: Update existing todolist in database
      parameters:
        - $ref: "#/components/parameters/TodolistId"
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/CreateOrUpdateTodolist"
            examples:
              java:
                description: Example create todolist Java
                value:
                  name: Java
                  priority: 3
                  tags: [
                    Java,
                    Programming
                  ]
              php:
                description: Example create todolist PHP
                value:
                  name: PHP
                  priority: 5
                  tags: [
                    PHP,
                    Programming
                  ]
      responses:
        200:
          description: Success update todolist
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Todolist"
              examples:
                java:
                  description: Success create todolist Java
                  value:
                    name: Java
                    priority: 3
                    tags: [
                      Java,
                      Programming
                    ]
                php:
                  description: Success create todolist PHP
                  value:
                    name: PHP
                    priority: 5
                    tags: [
                      PHP,
                      Programming
                    ]

    delete:
      tags:
        - Todolist
      summary: Delete existing todolist
      description: Delete existing todolist in database
      parameters:
        - $ref: "#/components/parameters/TodolistId"
      responses:
        200:
          description: Success delete todolist
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
              examples:
                success:
                  description: Success delete todolist
                  value:
                    success: true
        404:
          description: Failed delete todolist, not found todolist
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
              examples:
                failed:
                  description: Failed delete todolist
                  value:
                    success: false
components:
  parameters:
    TodolistId:
      name: todolistId
      in: path
      required: true
      description: Todolist id to delete
      schema:
        type: string
        minLength: 1
        maxLength: 100
      examples:
        java:
          description: Sample todolist id for Java
          value: 1
        php:
          description: Sample todolist id for PHP
          value: 2
  schemas:
    Todolist:
      type: object
      properties:
        id:
          type: string
        name:
          type: string
        priority:
          type: string
          format: int32
        tags:
          type: array
          items:
            type: string
    CreateOrUpdateTodolist:
      type: object
      properties:
        name:
          type: string
        priority:
          type: string
          format: int32
        tags:
          type: array
          items:
            type: string
    ArrayTodolist:
      type: array
      items:
        $ref: "#/components/schemas/Todolist"